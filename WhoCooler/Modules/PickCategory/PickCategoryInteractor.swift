//
//  PickCategoryInteractor.swift
//  WhoCooler
//
//  Created by Artem Trubacheev on 06.06.2020.
//  Copyright (c) 2020 Artem Trubacheev. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift

protocol PickCategoryBusinessLogic {
    func requestCategoryList()
    func searchCategory(request: PickCategory.Search.Request)
    func createCategory(request: PickCategory.Create.Request)
}

protocol PickCategoryDataStore {}

class PickCategoryInteractor: PickCategoryBusinessLogic, PickCategoryDataStore {

    var presenter: PickCategoryPresentationLogic?
    var worker: PickCategoryWorker = PickCategoryWorker()

    let disposeBag = DisposeBag()

    func requestCategoryList() {
        worker.getCategories()
            .subscribe(onNext: { [weak self] in
                self?.presenter?.didFetchСategories(response: .init(categories: $0.categories))
            }).disposed(by: disposeBag)
    }

    func searchCategory(request: PickCategory.Search.Request) {
        worker.search(context: request.searchContext)
            .subscribe(onNext: { [weak self] in
                self?.presenter?.didFetchСategories(response: .init(categories: $0.categories))
            }).disposed(by: disposeBag)
    }

    func createCategory(request: PickCategory.Create.Request) {
        worker.createCategory(name: request.name)
            .subscribe(onNext: { [weak self] category in
                self?.presenter?.didCreateCategory(response: .init(category: category))
            }).disposed(by: disposeBag)
    }

}
