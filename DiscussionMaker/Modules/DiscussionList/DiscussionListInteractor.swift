//
//  DiscussionListInteractor.swift
//  DiscussionMaker
//
//  Created by Artem Trubacheev on 18.01.2020.
//  Copyright (c) 2020 Artem Trubacheev. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift

protocol DiscussionListBusinessLogic {
    func getData(request: DiscussionList.Something.Request)
}

protocol DiscussionListDataStore {}

class DiscussionListInteractor: DiscussionListBusinessLogic, DiscussionListDataStore {

    var presenter: DiscussionListPresentationLogic?
    var worker = DiscussionListWorker()

    let disposeBag = DisposeBag()

    // MARK: - Do something
    func getData(request: DiscussionList.Something.Request) {
        worker.getDiscussions().subscribe(onNext: { [weak self] in
            let response = DiscussionList.Something.Response(data: $0.debates)
            self?.presenter?.presentSomething(response: response)
        }).disposed(by: disposeBag)
    }
}
