//
//  AuthorizationScreenViewController.swift
//  DiscussionMaker
//
//  Created by Artem Trubacheev on 04.04.2020.
//  Copyright (c) 2020 Artem Trubacheev. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Firebase

protocol AuthorizationScreenDisplayLogic: class {
    func displaySomething(viewModel: AuthorizationScreen.Something.ViewModel)
}

class AuthorizationScreenViewController: UIViewController, AuthorizationScreenDisplayLogic {
    var interactor: AuthorizationScreenBusinessLogic?
    var router: (NSObjectProtocol & AuthorizationScreenRoutingLogic & AuthorizationScreenDataPassing)?

    var handle: AuthStateDidChangeListenerHandle!

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = AuthorizationScreenInteractor()
        let presenter = AuthorizationScreenPresenter()
        let router = AuthorizationScreenRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        doSomething()
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        handle = Auth.auth().addStateDidChangeListener { (auth, user) in
          // ...
        }
    }

    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        Auth.auth().removeStateDidChangeListener(handle)
    }

    // MARK: Do something
    func doSomething() {
        let request = AuthorizationScreen.Something.Request()
        interactor?.doSomething(request: request)
    }

    func displaySomething(viewModel: AuthorizationScreen.Something.ViewModel) {
    }
}
