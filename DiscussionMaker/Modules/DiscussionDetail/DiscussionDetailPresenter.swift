//
//  DiscussionDetailPresenter.swift
//  DiscussionMaker
//
//  Created by Artem Trubacheev on 09.04.2020.
//  Copyright (c) 2020 Artem Trubacheev. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DiscussionDetailPresentationLogic {
    func presentDebate(response: DiscussionDetail.Initializing.Response)
}

class DiscussionDetailPresenter: DiscussionDetailPresentationLogic {

    weak var viewController: DiscussionDetailDisplayLogic?

    // MARK: Do something
    func presentDebate(response: DiscussionDetail.Initializing.Response) {
        let viewModel = DiscussionDetail.Initializing.ViewModel(
            debate: response.debate,
            sections: makeSections(with: response.debate)
        )
        viewController?.displayDebate(viewModel: viewModel)
    }

    func makeSections(with debate: Discussion) -> [DiscussionDetailSection] {
        debate.messagesList.messages.map {
            (.message($0), rows: [.message($0)])
        }
    }

}
